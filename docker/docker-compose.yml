services:
  web-video-server:
    build: ./web-video-server
    container_name: robot-web-video-server-1
    command: >
      bash -lc '. /opt/ros/iron/setup.bash;
                exec ros2 run web_video_server web_video_server --port 8080 --address 0.0.0.0'
    ports: ["8080:8080"]
    healthcheck:
      test:
        - CMD-SHELL
        - "python3 -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:8080/').status<500 else sys.exit(1)\""
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s

  netstatus:
    build: ../services/netstatus
    container_name: robot-netstatus-1
    ports: ["5000:5000"]
    healthcheck:
      test:
        - CMD-SHELL
        - "python3 -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:5000/status').status<500 else sys.exit(1)\""
      interval: 10s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  video-dashboard:
    image: nginx:stable
    container_name: robot-video-dashboard-1
    volumes:
      - ../site:/usr/share/nginx/html:ro
      - ../nginx/conf.d:/etc/nginx/conf.d:ro
    ports: ["8081:80"]
    depends_on:
      web-video-server:
        condition: service_healthy
      netstatus:
        condition: service_healthy
    restart: unless-stopped

    # Append to ~/robot-project/docker/docker-compose.yml under services:
  v4l2-camera:
    image: ros:iron
    container_name: robot-v4l2-camera-1
    command: >
      bash -lc "
        apt-get update &&
        apt-get install -y ros-iron-v4l2-camera v4l-utils &&
        . /opt/ros/iron/setup.bash &&
        ros2 run v4l2_camera v4l2_camera_node
          --ros-args
          -p video_device:='/dev/video0'
          -p image_size:='[640,480]'
          -p framerate:=15
      "
    devices:
      - "/dev/video0:/dev/video0"
    restart: unless-stopped

  networks:
    - default


networks:
  default:
    name: robot-net
