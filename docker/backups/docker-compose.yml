# docker-compose.yml
# Robot Project - Core stack
# Standardized network name: robot-net

services:
  netstatus:
    image: python:3.11-slim
    container_name: robot-netstatus-1
    working_dir: /app
    command: python app.py
    volumes:
      - ../services/netstatus:/app:ro
    expose:
      - "5000"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://127.0.0.1:5000/status', timeout=2).read()"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    networks:
      robot-net:
        aliases: [netstatus]

  # Minimal ROS core (handy for interactive ros2 shells later)
  ros-core:
    image: ros:iron-ros-core
    container_name: ros-core
    command: ["bash","-lc","source /opt/ros/iron/setup.bash && sleep infinity"]
    environment:
      - ROS_DOMAIN_ID=0
    restart: unless-stopped
    networks:
      robot-net:
        aliases:
          - ros-core

  web-video-server:
    container_name: robot-web-video-server-1
    image: robot-web-video-server
    ports:
      - "8080:8080"
    # If your image doesn't already run the server by default, keep the command:
    command: >
      bash -lc "source /opt/ros/iron/setup.bash &&
                ros2 run web_video_server web_video_server
                --port 8080 --address 0.0.0.0"
    depends_on:
      - ros-core
    restart: unless-stopped
    networks:
      robot-net:
        aliases: [web-video-server]

  usb-cam:
    image: ghcr.io/yourorg/ros2-v4l2-camera:iron
    container_name: robot-usb-cam-1
    devices:
      - "/dev/video0:/dev/video0"
    environment:
      - VIDEO_DEVICE=/dev/video0
    command: >
      bash -lc "source /opt/ros/iron/setup.bash &&
                ros2 run v4l2_camera v4l2_camera_node
                --ros-args -p video_device:=${VIDEO_DEVICE}"
    depends_on:
      - ros-core
    restart: unless-stopped
    networks:
      robot-net:
        aliases: [usb-cam]

  video-dashboard:
    image: nginx:stable
    container_name: robot-video-dashboard-1
    volumes:
      - ../site:/usr/share/nginx/html:ro
      - ../site/nginx/conf.d:/etc/nginx/conf.d:ro
    ports:
      - "8081:80"
    depends_on:
      - web-video-server
      - netstatus
    restart: unless-stopped
    networks:
      robot-net:
        aliases: [video-dashboard]

# Optional: RoboClaw driver service (uncomment and adjust when ready)
#  roboclaw_driver:
#    build:
#      context: ../services/roboclaw_driver
#    container_name: robot-roboclaw_driver-1
#    environment:
#      - ROS_DOMAIN_ID=0
#    devices:
#      - "/dev/ttyACM0:/dev/ttyACM0"   # update if different
#    depends_on:
#      - ros-core
#    restart: unless-stopped
#    networks:
#      robot-net:
#        aliases: [roboclaw-driver]

networks:
  robot-net:
    name: robot-net
    driver: bridge
